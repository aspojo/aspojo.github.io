import{r as t,h as o,c as n}from"./p-35ea044f.js";import{p as e}from"./p-91853b91.js";import"./p-364e0bda.js";import"./p-adeb1d66.js";import"./p-b3e6427d.js";import"./p-703ca87c.js";import"./p-70b2452c.js";import"./p-69e7783d.js";import"./p-dbc8000c.js";import"./p-f9f2f063.js";import"./p-11386070.js";import"./p-fcf33e2f.js";import"./p-8c6b6038.js";import"./p-6fd4985d.js";let i=class{constructor(o){t(this,o),this.defaultColumnOptions=[["Dog","Cat","Bird","Lizard","Chinchilla"]],this.multiColumnOptions=[["Minified","Responsive","Full Stack","Mobile First","Serverless"],["Tomato","Avocado","Onion","Potato","Artichoke"]]}async openPicker(t=1,o=5,n=this.defaultColumnOptions){const i=await e.create({columns:this.getColumns(t,o,n),buttons:[{text:"Cancel",role:"cancel"},{text:"Confirm",handler:t=>{console.log(`Got Value ${t}`)}}]});await i.present()}getColumns(t,o,n){const e=[];for(let i=0;i<t;i++)e.push({name:`col-${i}`,options:this.getColumnOptions(i,o,n)});return e}getColumnOptions(t,o,n){const e=[];for(let i=0;i<o;i++)e.push({text:n[t][i%o],value:i});return e}render(){return[o("ion-header",{translucent:!0},o("ion-toolbar",null,o("ion-buttons",{slot:"start"},o("ion-back-button",{defaultHref:"/"})),o("ion-title",null,"Picker"))),o("ion-content",{fullscreen:!0,class:"component-content"},o("component-details",{description:"The <b>Picker</b> is a dialog that displays a row of buttons\n      and columns underneath. It appears on top of the app's content, and at the bottom\n      of the viewport.",url:"picker"}),o("div",{class:"ion-padding-start ion-padding-end"},o("ion-button",{expand:"block",onClick:()=>this.openPicker()},"Open Single Column Picker"),o("ion-button",{expand:"block",onClick:()=>this.openPicker(2,5,this.multiColumnOptions)},"Open Multiple Column Picker")))]}get el(){return n(this)}};i.style="";export{i as component_picker}